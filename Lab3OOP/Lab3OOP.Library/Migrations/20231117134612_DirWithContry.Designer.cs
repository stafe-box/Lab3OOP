// <auto-generated />
using Lab3OOP.Library;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Lab3OOP.Library.Migrations
{
    [DbContext(typeof(FilmCatalogContext))]
    [Migration("20231117134612_DirWithContry")]
    partial class DirWithContry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.14");

            modelBuilder.Entity("Lab3OOP.Library.Director", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_Director_ID")
                        .IsUnique();

                    b.ToTable("Director", (string)null);
                });

            modelBuilder.Entity("Lab3OOP.Library.Film", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<long>("Director")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Genre")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Studio")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Director");

                    b.HasIndex("Genre");

                    b.HasIndex("Studio");

                    b.HasIndex(new[] { "Id" }, "IX_Film_ID")
                        .IsUnique();

                    b.ToTable("Film", (string)null);
                });

            modelBuilder.Entity("Lab3OOP.Library.Genre", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_Genre_ID")
                        .IsUnique();

                    b.ToTable("Genre", (string)null);
                });

            modelBuilder.Entity("Lab3OOP.Library.Studio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("ID");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "IX_Studio_ID")
                        .IsUnique();

                    b.ToTable("Studio", (string)null);
                });

            modelBuilder.Entity("Lab3OOP.Library.Film", b =>
                {
                    b.HasOne("Lab3OOP.Library.Director", "DirectorNavigation")
                        .WithMany("Films")
                        .HasForeignKey("Director")
                        .IsRequired();

                    b.HasOne("Lab3OOP.Library.Genre", "GenreNavigation")
                        .WithMany("Films")
                        .HasForeignKey("Genre")
                        .IsRequired();

                    b.HasOne("Lab3OOP.Library.Studio", "StudioNavigation")
                        .WithMany("Films")
                        .HasForeignKey("Studio")
                        .IsRequired();

                    b.Navigation("DirectorNavigation");

                    b.Navigation("GenreNavigation");

                    b.Navigation("StudioNavigation");
                });

            modelBuilder.Entity("Lab3OOP.Library.Director", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("Lab3OOP.Library.Genre", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("Lab3OOP.Library.Studio", b =>
                {
                    b.Navigation("Films");
                });
#pragma warning restore 612, 618
        }
    }
}
